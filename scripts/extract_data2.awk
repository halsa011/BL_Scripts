#!/usr/bin/awk

#=====================================================================================================================
# AUTHOR.........Sara Hallouda																						
# DATE...........20.10.2016																							
#
# DESCRIPTION
# ----------- 
# this script extracts data from the following txt file format:
# TOD	TrackID	x y	source callsign MS-Address(dec) 
# 20160314080000.199	997	-1436.000000	1032.000000	0x09	"LEOS07"	3949363	
# 0x01 SSR(FFS), 0x02 PSR(FFS), 0x03 SMR, 0x09 MLAT
# and returns the additional columns:
# TOD time of detection in seconds, Seconds is the continuous seconds counter that goes over midnight, dt is the update rate in sec 
# output format:
# NR;Time;Date;TOD;Seconds;dt;ACAdd;MLAT;SMR;SSR;PSR;n_sensors;Track;x;y;CS
# For records going overnight, day1 is extracted from the the first record and day2 is generated by adding 1 day, line 55-56
# script is called by:
# awk -f extract_data2.awk MS=3949363 test.txt
# where: test.txt is the input file and MS is the selected mode-S Address in hexa
#=====================================================================================================================
function fillSen(word){
	if (word ~ /0x01/){
		SSR = 1
	}
	if (word ~ /0x02/){
		PSR = 1
	}
	if (word ~ /0x03/){
		SMR = 1
	}
	if (word ~ /0x09/){
		MLAT = 1
	}

}

BEGIN{
	Header= "NR;Time;Date;TOD;Seconds;dt;ACAdd;MLAT;SMR;SSR;PSR;n_sensors;Track;x;y;CS"
	print Header
	OFS=";"
	#FS="\t"
	n_sen=0
	dt=0
	flag=0
}


##$0!~/^[^0-9]*$ this line matches empty tabs records, it could have different outcomes for another file then the tested one

$NF==MS{

if (flag==0){
	NR_begin=NR
	day1=substr($1,1,4)"."substr($1,5,2)"."substr($1,7,2)
	day2= substr(day1,1,8)(substr(day1,9)+1) 
}	

flag=1

#extracting date and time
Y=substr($1,1,4);M=substr($1,5,2);D=substr($1,7,2);hh=substr($1,9,2);mm=substr($1,11,2);sec=substr($1,13)
t=hh":"mm":"sec
TOD=hh*3600+mm*60+sec

#storing values from time-1
if (NR>NR_begin){
	seconds_old=seconds
	Track_old=Track
	MS_old=MS
}

#finding midnight record and setting found flag to 1 and incrementing the seconds count
if (hh~ 00 && mm~ 00 && ss~ 00 && found==0){
found=1
seconds=86400
}

#for records after midnight the date is incremented by 1 to day2 and seconds are incremented by TOD
if (found==1){
seconds=86400+TOD
day=day2}

else{
seconds=TOD
day=day1}

#Extracting Track Number
Track=$2

#calculating the update time
if (NR>NR_begin){
	dt=seconds-seconds_old
}
else{
	dt=0
}

# Extracting Sensor Data call sign and Mode S, the number of fields vary with the number of sensors included, that is why regex is used to find sensor MS and CS
# Alternatively MS and CS can be extracted by using $NF for MS and $(NF-1) for CS
MLAT=0
PSR=0
SMR=0
SSR=0
n_sen=0
CS ="NA"
MS ="NA"

for (i=5;i<=NF;i++){
	if ($i ~ /0x0[1239]/){
		fillSen($i)}
	else if ($i~ /^[0-9]+$/){
	MS = $i
	}
	else if ($i~/^".+"$/){
	CS = $i
	}
	else {
		MLAT = "NA";PSR = "NA";SMR = "NA";SSR = "NA";n_sen = "NA";MS = "NA";CS = "NA"
	}
}

n_sensors=MLAT+SMR+SSR+PSR

x = $3
y = $4



print NR, t, day, TOD, seconds, dt, MS, MLAT, SMR, SSR, PSR, n_sensors, Track, x, y, CS

}